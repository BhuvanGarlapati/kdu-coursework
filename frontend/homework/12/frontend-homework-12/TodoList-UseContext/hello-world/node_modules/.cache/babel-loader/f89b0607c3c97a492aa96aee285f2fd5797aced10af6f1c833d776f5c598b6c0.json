{"ast":null,"code":"var _jsxFileName = \"/Users/bhuvang/Downloads/Frontend-classwork/TodoList-UseContext/hello-world/src/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Midsection from './Midsection';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/React.createContext({\n  searchTerm: '',\n  setSearchTerm: '',\n  todos: [],\n  setTodos: [],\n  newTodoText: '',\n  setNewTodoText: ''\n});\nexport function TodoProvider({\n  children\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState('');\n\n  // const search =  (e:any) => {\n  //         setSearchTerm(e.target.value)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      searchTerm,\n      todos,\n      newTodoText,\n      setNewTodoText,\n      setTodos,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoProvider, \"ibn5Y+mOdfgQ+l/5CQVrZkxQsO8=\");\n_c = TodoProvider;\n;\nfunction Todolist() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Midsection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Todolist;\nexport default Todolist;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoProvider\");\n$RefreshReg$(_c2, \"Todolist\");","map":{"version":3,"names":["React","useState","Header","Midsection","jsxDEV","_jsxDEV","TodoContext","createContext","searchTerm","setSearchTerm","todos","setTodos","newTodoText","setNewTodoText","TodoProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Todolist","_c2","$RefreshReg$"],"sources":["/Users/bhuvang/Downloads/Frontend-classwork/TodoList-UseContext/hello-world/src/TodoList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport Midsection from './Midsection';\nimport './App.scss';\n\n\ninterface ITodoContext{\n    searchTerm:string;\n    setSearchTerm:any;\n    todos:string[];\n    setTodos:any;\n    newTodoText:string;\n    setNewTodoText:any;\n}\n\nexport const TodoContext = React.createContext<ITodoContext>({\n    searchTerm:'',\n    setSearchTerm:'',\n    todos:[],\n    setTodos:[],\n    newTodoText:'',\n    setNewTodoText:'',\n}\n    \n);\n\ninterface TodoProviderProps {\n    children: React.ReactNode;\n  }\n\nexport function TodoProvider({ children }:TodoProviderProps){\n    const [searchTerm, setSearchTerm] = useState<string>('');\n    const [todos, setTodos] = useState<string[]>([]);\n    const [newTodoText, setNewTodoText] = useState<string>('');\n\n    // const search =  (e:any) => {\n    //         setSearchTerm(e.target.value)\n    // };\n\nreturn (\n    <TodoContext.Provider value={{ searchTerm, todos, newTodoText,setNewTodoText,setTodos ,setSearchTerm}} >\n        {children}\n        </TodoContext.Provider>\n);\n};\n\nfunction Todolist() {\n\n  return (\n    <div>\n        <TodoProvider>\n            <Header/>\n            <Midsection/>\n        </TodoProvider>\n      {/* <Header searchTerm={searchTerm} setSearchTerm={setSearchTerm}/>\n      <Midsection\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        newTodoText={newTodoText}\n        setNewTodoText={setNewTodoText}\n        todos={todos}\n        setTodos={setTodos}\n      /> */}\n    </div>\n  );\n}\n\nexport default Todolist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYpB,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAa,CAAe;EACzDC,UAAU,EAAC,EAAE;EACbC,aAAa,EAAC,EAAE;EAChBC,KAAK,EAAC,EAAE;EACRC,QAAQ,EAAC,EAAE;EACXC,WAAW,EAAC,EAAE;EACdC,cAAc,EAAC;AACnB,CAEA,CAAC;AAMD,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAA2B,CAAC,EAAC;EAAAC,EAAA;EACxD,MAAM,CAACR,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;;EAE1D;EACA;EACA;;EAEJ,oBACII,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEE,KAAK;MAAEE,WAAW;MAACC,cAAc;MAACF,QAAQ;MAAEF;IAAa,CAAE;IAAAM,QAAA,EACjGA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE/B;AAACN,EAAA,CAdeF,YAAY;AAAAS,EAAA,GAAZT,YAAY;AAc3B;AAED,SAASU,QAAQA,CAAA,EAAG;EAElB,oBACEnB,OAAA;IAAAU,QAAA,eACIV,OAAA,CAACS,YAAY;MAAAC,QAAA,gBACTV,OAAA,CAACH,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTjB,OAAA,CAACF,UAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUd,CAAC;AAEV;AAACG,GAAA,GAnBQD,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}