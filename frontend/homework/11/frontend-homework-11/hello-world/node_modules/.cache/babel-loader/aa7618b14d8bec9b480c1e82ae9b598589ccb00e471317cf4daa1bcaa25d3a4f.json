{"ast":null,"code":"var _jsxFileName = \"/Users/bhuvang/Downloads/Quots-React/hello-world/src/Quotes.tsx\";\nimport React from 'react';\nimport './Quote.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = ({\n  quote,\n  filterquote,\n  addFilter\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quote\",\n      children: quote.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-author\",\n      children: [\"~\", quote.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-date\",\n      children: quote.dateAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-tag\",\n      children: quote.tags.map(q => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quote-tag-single\",\n          onClick: addFilter,\n          children: q\n        }, q, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Quotes","quote","filterquote","addFilter","className","children","content","fileName","_jsxFileName","lineNumber","columnNumber","author","dateAdded","tags","map","q","onClick","_c","$RefreshReg$"],"sources":["/Users/bhuvang/Downloads/Quots-React/hello-world/src/Quotes.tsx"],"sourcesContent":["import React from 'react'\nimport { ApiQuote } from './types/quotes.types'\nimport './Quote.scss';\n\ninterface QuoteProps{\n    quote:ApiQuote;\n    filterquote: string[];\n    addFilter():void;\n}\nconst Quotes = ({quote,filterquote,addFilter}:QuoteProps) => {\n  return (\n\n    <div className='quote-container'>\n        <h1 className='quote'>{quote.content}</h1>\n        <p className='quote-author'>~{quote.author}</p>\n        <p className='quote-date'>{quote.dateAdded}</p>\n   \n    <div className='quote-tag'>\n        {quote.tags.map((q)=>{\n            return <span className='quote-tag-single' onClick={addFilter} key={q}>{q}</span>\n        })}\n       </div>\n    </div>\n\n  );\n}\n\nexport default Quotes"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtB,MAAMC,MAAM,GAAGA,CAAC;EAACC,KAAK;EAACC,WAAW;EAACC;AAAoB,CAAC,KAAK;EAC3D,oBAEEJ,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BN,OAAA;MAAIK,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEJ,KAAK,CAACK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CX,OAAA;MAAGK,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,GAAC,EAACJ,KAAK,CAACU,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CX,OAAA;MAAGK,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEJ,KAAK,CAACW;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnDX,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBJ,KAAK,CAACY,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAG;QACjB,oBAAOhB,OAAA;UAAMK,SAAS,EAAC,kBAAkB;UAACY,OAAO,EAAEb,SAAU;UAAAE,QAAA,EAAUU;QAAC,GAALA,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MACpF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAAAO,EAAA,GAhBKjB,MAAM;AAkBZ,eAAeA,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}