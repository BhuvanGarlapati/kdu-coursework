{"ast":null,"code":"var _jsxFileName = \"/Users/bhuvang/Downloads/Quots-React/hello-world/src/Quotes.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = ({\n  quote\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quote\",\n      children: quote.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-author\",\n      children: [\"~\", quote.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-date\",\n      children: quote.dateAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-tag\",\n      children: quote.tags.map(q => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: q\n        }, q, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Quotes","quote","className","children","content","fileName","_jsxFileName","lineNumber","columnNumber","author","dateAdded","tags","map","q","_c","$RefreshReg$"],"sources":["/Users/bhuvang/Downloads/Quots-React/hello-world/src/Quotes.tsx"],"sourcesContent":["import React from 'react'\nimport { ApiQuote } from './types/quotes.types'\ninterface QuoteProps{\n    quote:ApiQuote\n}\nconst Quotes = ({quote}:QuoteProps) => {\n  return (\n\n    <div className='quote-container'>\n        <h1 className='quote'>{quote.content}</h1>\n        <p className='quote-author'>~{quote.author}</p>\n        <p className='quote-date'>{quote.dateAdded}</p>\n   \n    <div className='quote-tag'>\n        {quote.tags.map((q)=>{\n            return <span key={q}>{q}</span>\n        })}\n       </div>\n    </div>\n\n  );\n}\n\nexport default Quotes"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKzB,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAgB,CAAC,KAAK;EACrC,oBAEEF,OAAA;IAAKG,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BJ,OAAA;MAAIG,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEF,KAAK,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CT,OAAA;MAAGG,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,GAAC,EAACF,KAAK,CAACQ,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CT,OAAA;MAAGG,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEF,KAAK,CAACS;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnDT,OAAA;MAAKG,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBF,KAAK,CAACU,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAG;QACjB,oBAAOd,OAAA;UAAAI,QAAA,EAAeU;QAAC,GAALA,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MACnC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAAAM,EAAA,GAhBKd,MAAM;AAkBZ,eAAeA,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}